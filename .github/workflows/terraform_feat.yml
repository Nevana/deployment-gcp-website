name: 'Terraform plan'

on:
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Terraform setup
      uses: hashicorp/setup-terraform@v1

    - name: Terraform init
      run: terraform init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform format
      run: terraform fmt -check

    - name: Terraform validate
      run: terraform validate

    - name: Terraform plan
      run: terraform plan -var-file=settings.tfvars
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.TF_API_TOKEN }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })